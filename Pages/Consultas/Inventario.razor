@page "/inventario"

@page "/inventario/{InventarioId:int}"

@*--------- Orden de compras Articulos ---------*@


@inject AuthenticationStateProvider Authentication

@inject IToastService Toast

@using BLL

<EditForm Model="inventarioArticulos" @OnInvalidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card shadow-lg">

        <div class="card">

            <p />
            <div class="card-header rz-border-radius-4 shadow text-center">
                <h4>
                    Inventario
                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-box-fill" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M15.528 2.973a.75.75 0 0 1 .472.696v8.662a.75.75 0 0 1-.472.696l-7.25 2.9a.75.75 0 0 1-.557 0l-7.25-2.9A.75.75 0 0 1 0 12.331V3.669a.75.75 0 0 1 .471-.696L7.443.184l.004-.001.274-.11a.75.75 0 0 1 .558 0l.274.11.004.001 6.971 2.789Zm-1.374.527L8 5.962 1.846 3.5 1 3.839v.4l6.5 2.6v7.922l.5.2.5-.2V6.84l6.5-2.6v-.4l-.846-.339Z" />
                    </svg>
                </h4>
            </div>

            <div class="card-body">
                <div class="row">

                    @*...................... Codigo Articulo ......................*@

                    <div class="input-group d-flex align-items-end">
                        <div class="Form-group col-3">
                            <label>Criterio</label>
                            <InputText class="form-control" @bind-Value="Criterio"
                                       placeholder="Ingresar Código" />
                        </div>

                        <button type="button" class="btn btn-consulta" @onfocusout="ObtenerDatosArticulo" @onclick="Buscar" title="Consultar ventas">
                            <i class="oi oi-grid-four-up mr-2" /> Consultar
                        </button>
                    </div>
                    <p />

                    @*...................... Nombre ......................*@

                    <div class="form-group col-3">
                        <label>Descripción Articulo</label>
                        <InputText @bind-Value="descripción" placeholder="Descripción articulo" class="form-control" readOnly="true" />
                    </div>

                    <p />
                    <p />
                    <hr>

                    <table class="justify-content-center shadow 4 rz-border-radius-4 table table-light table-striped table-bordered">
                        <thead class="thead">
                            <tr class="text-center justify-content-center table bg-inventariocolor">

                                <th class="border border-3">Código</th>

                                <th class="border border-3">Descripción Articulo</th>

                                <th class="border border-3">Cantidad</th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in ArticuloList)
                            {
                                if (Criterio == item.ArticuloId.ToString() || Criterio == item.Nombre.ToLower())
                                {
                                    <tr class="text-center ">
                                        <td class="border border-3">@item.ArticuloId</td>

                                        <td class="border border-3">@item.Nombre</td>

                                        <td class="border border-3">@item.Cantidad</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <hr />
                    <p />

                    <label>Nueva Cantidad</label>
                    <div class="form-group col-2">
                        <InputNumber @bind-Value="CantidadNueva" class="form-control" />
                    </div>
                    <p />

                    <label>Agregar / Sumar - Cantidad</label>
                    <div class="form-group col-2" style="margin:auto">
                        <InputNumber @bind-Value="Detalle.Cantidad" class="form-control" />
                    </div>

                    <div class="from-group col-2" style="margin:auto">
                        <InputNumber @bind-Value="venta.Existencia" class="form-control" readOnly="true" />
                    </div>

                    <div class="form-group col" style="margin:auto">
                        <button type="submit" class="btn btn-añadir" @onfocusout="ActualizandoUnidadesArticulo" title="Actualizar cantidad">
                            <span class="oi oi-check"> Guardar </span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {

    #nullable disable // Para quitar el aviso de nulls

    [Parameter]
    public int InventarioId { get; set; }

    public Articulo inventarioArticulos = new Articulo();

    public string descripcion { get; set; }

    public double CantidadNueva { get; set; }

    public double CantidadActualizada { get; set; }

    Ventas venta = new Ventas();
    VentasDetalle Detalle = new VentasDetalle();
    Articulo articulo = new Articulo();

    public string descripción { get; set; }

    public List<Articulo> ArticuloList { get; set; } = new List<Articulo>();

    public List<Ventas> VentasList { get; set; } = new List<Ventas>();


    [Inject]
    public CategoriaBLL categoriaBLL { get; set; } // Inyectando BLLS

    [Inject]
    public ArticuloBLL articuloBLL { get; set; } // Inyectando BLL

    [Inject]
    public VentasBLL ventaBLL { get; set; } // Inyectando BLL

    List<Categoria> CategoriaList = new List<Categoria>();

    public string Filtro;

    public string Criterio;


    //-----------------------------------------------------------------------

    protected override void OnInitialized()
    {
        inventarioArticulos = new Articulo();
        CategoriaList = categoriaBLL.GetList(c => true);
        ArticuloList = articuloBLL.GetList(c => true);
        VentasList = ventaBLL.GetList(c => true);

        Filtro = "1";

        if (InventarioId > 0)
        {
            inventarioArticulos.ArticuloId = InventarioId;
            this.Buscar();
        }
    }

    public void Guardar() // Guardar articulo
    {
        bool articulo2 = true;

        ActualizandoUnidadesArticulo();

        if (articulo2 == true)
        {
            articulo = new Articulo();
            venta = new Ventas();
            articulo2 = articuloBLL.Guardar(inventarioArticulos);

            Toast.ShowSuccess("Articulo actualizado");
        }
        else
        {
            articulo2 = false;
            Toast.ShowWarning("Articulo no actualizado");
        }
    }

    private void ActualizandoUnidadesArticulo()
    {
        Articulo auxArticulo = articuloBLL.Buscar(int.Parse(Criterio));

        if (auxArticulo != null)
        {
            // Las unidades que se sumaron
            venta.Existencia = auxArticulo.Cantidad;
            bool Articulosss = articuloBLL.Guardar(auxArticulo);
            venta.Existencia = auxArticulo.Cantidad + Detalle.Cantidad; 

            CantidadActualizada = auxArticulo.Cantidad + CantidadNueva;
        }
    }

    private void ObtenerDatosArticulo() // Obteniendo los datos del articulo buscado
    {
        Articulo auxArticulo = articuloBLL.Buscar(int.Parse(Criterio));

        if (auxArticulo != null)
        {
            descripción = auxArticulo.Nombre; // Obteniendo el nombre del articulo

            venta.Existencia = auxArticulo.Cantidad; // Mostrando la cantidad de unidades del articulo buscado
        }
    }

    private void Buscar()
    {
        if (Criterio != null)
        {
            switch (Filtro)
            {
                case "1":
                    ArticuloList = articuloBLL.GetList(e => e.ArticuloId == int.Parse(Criterio));
                    if (ArticuloList != null)
                    {
                        ObtenerDatosArticulo();
                    }
                    break;
            }
        }
    }
}

