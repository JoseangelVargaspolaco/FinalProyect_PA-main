@page "/articulos"

@page "/articulos/{ArticuloId:int}"

@* Registro de articulos *@

@inject AuthenticationStateProvider Authentication

@inject IToastService Toast

@using BLL

<EditForm Model="articulos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>

    <div class="card shadow-lg">

        <div class="card">

            <p />
            <div class="card-header rz-border-radius-4 shadow text-center">
                <h4>
                    Inventario
                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-box-fill" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M15.528 2.973a.75.75 0 0 1 .472.696v8.662a.75.75 0 0 1-.472.696l-7.25 2.9a.75.75 0 0 1-.557 0l-7.25-2.9A.75.75 0 0 1 0 12.331V3.669a.75.75 0 0 1 .471-.696L7.443.184l.004-.001.274-.11a.75.75 0 0 1 .558 0l.274.11.004.001 6.971 2.789Zm-1.374.527L8 5.962 1.846 3.5 1 3.839v.4l6.5 2.6v7.922l.5.2.5-.2V6.84l6.5-2.6v-.4l-.846-.339Z" />
                    </svg>
                </h4>
            </div>

            <div class="card-body">
                <div class="row">

                    @*...................... Codigo Articulo ......................*@



                <br>
              
            </div>
        </div>
    </div>
</EditForm>

@code {

#nullable disable // Para quitar el aviso de nulls
    Articulo articulos = new Articulo();

    [Parameter]
    public int ArticuloId { get; set; }

    [Inject]
    public CategoriaBLL categoriaBLL { get; set; } // Inyectando BLLS

    [Inject]
    public ArticuloBLL articuloBLL { get; set; } // Inyectando BLL

    List<Categoria> CategoriaList = new List<Categoria>();


    //-----------------------------------------------------------------------

    protected override void OnInitialized()
    {
        articulos = new Articulo();
        CategoriaList = categoriaBLL.GetList(c => true);

        if (ArticuloId > 0)
        {
            articulos.ArticuloId = ArticuloId;
            this.Buscar();
        }
    }

    public void Nuevo() // Nuevo articulo
    {
        articulos = new Articulo();
        CategoriaList = categoriaBLL.GetList(c => true);
    }

    public void Guardar() // Guardar articulo
    {
        if (articulos.Precio < articulos.Costo)
        {
            Toast.ShowWarning("El precio debe ser mayor al costo"); // Validacion
            return;
        }

        var articulo2 = articuloBLL.ExisteNombre(articulos.Nombre);
        if (articulo2 == null) //si no existe
        {
            if (articuloBLL.Guardar(articulos))
            {
                Toast.ShowSuccess($"Articulo: {articulos.Nombre}, Guardado correctamente");
                articulos = new Articulo();
            }
            else
                Toast.ShowError("No fue posible guardar");
        }
        else // si existe
        {
            if (articulo2.Nombre.ToLower() == articulos.Nombre.ToLower() && articulo2.ArticuloId == articulos.ArticuloId)
            {
                if (articuloBLL.Guardar(articulos))
                {
                    Toast.ShowSuccess($"Articulo: {articulos.Nombre}, Guardado correctamente");
                    articulos = new Articulo();
                }
                else
                    Toast.ShowError("No fue posible guardar");
            }
            else
            {
                Toast.ShowError($"Articulo: {articulos.Nombre}, ya esta registrado");
            }
        }
    }

    public void Buscar() // Buscar articulo
    {
        if (this.articulos.ArticuloId > 0)
        {
            var Articulo = articuloBLL.Buscar(articulos.ArticuloId);

            if (Articulo != null)
            {
                articulos = Articulo;

                Toast.ShowSuccess($"Articulo: {articulos.Nombre}, encontrado ");
            }
            else
            {
                Toast.ShowWarning($"No existe un articulo con este Id: {articulos.ArticuloId}");
            }
        }
    }

    public void Eliminar() // Eliminar articulo
    {
        bool Eliminar;

        Eliminar = articuloBLL.Eliminar(articulos.ArticuloId);

        if (Eliminar)
        {
            articulos = new Articulo();
            CategoriaList = categoriaBLL.GetList(c => true);
            Toast.ShowSuccess("Eliminado correctamente");
        }
        else
            Toast.ShowError("No fue posible eliminar");
    }
}

